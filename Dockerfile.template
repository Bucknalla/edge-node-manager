# Base-image for golang on any machine using a template variable
# See more about dockerfile templates here: http://docs.resin.io/deployment/docker-templates/
# See more about resin base images here: http://docs.resin.io/runtime/resin-base-images/
FROM resin/%%RESIN_MACHINE_NAME%%-golang

# Set the maintainer
MAINTAINER Joe Roberts <joe@resin.io>

# Disable systemd init system
ENV INITSYSTEM off

# Add the key for foundation repository
RUN wget http://archive.raspberrypi.org/debian/raspberrypi.gpg.key -O - | apt-key add -

# Add apt source of the foundation repository
# We need this source because bluez needs to be patched in order to work with rpi3 ( Issue #1314: How to get BT working on Pi3B. by clivem in raspberrypi/linux on GitHub )
# Add it on top so apt will pick up packages from there
RUN sed -i '1s#^#deb http://archive.raspberrypi.org/debian jessie main\n#' /etc/apt/sources.list

# Use apt-get to install dependencies
RUN apt-get update && apt-get install -yq --no-install-recommends \
    bluez \
    bluez-firmware && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install glide
RUN mkdir -p $GOPATH/src/github.com/Masterminds && \
    cd $GOPATH/src/github.com/Masterminds && \
    git clone https://github.com/Masterminds/glide.git && \
    cd glide && make build && make install && \
    cd ../.. && rm -rf Masterminds

# Set our working directory
WORKDIR $GOPATH/src/github.com/resin-io/edge-node-manager

# Copy and install dependencies
COPY glide.lock glide.yaml ./
RUN glide install

# Copy everything else
COPY . ./

# Build the edge-node-manager
RUN go build

# start.sh will run when container starts up on the device
CMD ["bash", "start.sh"]
